version: '3.8'

services:
  postgres:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: admin
    networks:
      - db-tier
    volumes:
      - ./dbfiles/init.sql:/docker-entrypoint-initdb.d/init.sql
    #   - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - '5050:5050'
    networks:
      - db-tier
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: admin
    # volumes:
    #   - pgadmin-data:/var/lib/pgadmin
  redis:
    container_name: redisdb
    image: 'redis:latest'
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-tier
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    networks:
      - app-tier
    depends_on:
      - redis
  account-subgraph:
    container_name: account-subgraph-api
    volumes:
      - ./:/usr/src/app
      - /node_modules
    build:
      context: ./
      dockerfile: ./apps/account-subgraph/Dockerfile
      target: development
    ports:
      - '3002:3002'
    networks:
      - app-tier
      - db-tier
    command: yarn start:dev account-subgraph
    depends_on:
      - redis
      - postgres
    environment:
      REDIS_URL: redis://redis:6379
      PORT: 3002
      DATABASE_URL: postgres://admin:admin@postgres:5432/ps-dxp-development

  device-subgraph:
    container_name: device-subgraph-api
    volumes:
      - ./:/usr/src/app
      - /node_modules
    build:
      context: ./
      dockerfile: ./apps/device-subgraph/Dockerfile
      target: development
    ports:
      - '3001:3001'
    networks:
      - app-tier
    command: yarn start:dev device-subgraph
    depends_on:
      - redis
    environment:
      REDIS_URL: redis://redis:6379
      PORT: 3001
  gateway:
    container_name: gateway-api
    volumes:
      - ./:/usr/src/app
      - /node_modules
    build:
      context: ./
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: yarn start:dev
    ports:
      - '4000:4000'
    depends_on:
      - device-subgraph
      - account-subgraph
    networks:
      - app-tier
    links:
      - device-subgraph
      - account-subgraph
    environment:
      - SERVICE_LIST=http://device-subgraph:3001/graphql,devices|http://account-subgraph:3002/graphql,accounts|
      - PORT=4000

networks:
  app-tier:
    driver: bridge
  db-tier:
    driver: bridge
